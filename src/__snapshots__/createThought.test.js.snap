// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateThought should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateThought />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "Title: ",
        <input
          id="title-input"
          name="title"
          onChange={[Function]}
          type="text"
        />,
        "Body: ",
        <input
          id="body-input"
          name="body"
          onChange={[Function]}
          type="text"
        />,
        <input
          className="submit-btn"
          name="submit"
          onClick={[Function]}
          type="submit"
        />,
      ],
      "className": "create-thought-container",
    },
    "ref": null,
    "rendered": Array [
      "Title: ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "title-input",
          "name": "title",
          "onChange": [Function],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "Body: ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "body-input",
          "name": "body",
          "onChange": [Function],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "submit-btn",
          "name": "submit",
          "onClick": [Function],
          "type": "submit",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Title: ",
          <input
            id="title-input"
            name="title"
            onChange={[Function]}
            type="text"
          />,
          "Body: ",
          <input
            id="body-input"
            name="body"
            onChange={[Function]}
            type="text"
          />,
          <input
            className="submit-btn"
            name="submit"
            onClick={[Function]}
            type="submit"
          />,
        ],
        "className": "create-thought-container",
      },
      "ref": null,
      "rendered": Array [
        "Title: ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "title-input",
            "name": "title",
            "onChange": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "Body: ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "body-input",
            "name": "body",
            "onChange": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "submit-btn",
            "name": "submit",
            "onClick": [Function],
            "type": "submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
